(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{368:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("npm run build打包报"),a("code",[s._v("Error in render: \"TypeError: Cannot destructure property 'time' of 'this.$page.lastUpdated' as it is undefined.\"")])])]),s._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),a("p",[s._v("今天写好新的md文件时，npm run serve运行起来没有问题，于是我commit到本地后npm run build打包，可是却报错了，报错图片如下")]),s._v(" "),a("p",[a("img",{attrs:{src:"/myBlog/blogImages/BuildFail.png",alt:"image"}})]),s._v(" "),a("p",[s._v("提示"),a("code",[s._v("Error in render: \"TypeError: Cannot destructure property 'time' of 'this.$page.lastUpdated' as it is undefined.\"")]),s._v("，然后让我在Post组件里找")]),s._v(" "),a("p",[s._v("我猜想是因为run serve运行起来没有问题，那就不是写法的问题，在run build打包的适合提示找不到"),a("code",[s._v("this.$page.lastUpdated")]),s._v("属性，就是打包时获取不到这个计算属性，那应该就与异步加载有关联了，于是我打开Post组件查找跟"),a("code",[s._v("this.$page.lastUpdated")]),s._v("有关的代码，具体代码如下")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("computed: {\n    // 最近更新时间\n    lastUpdated() {\n      const { time } = this.$page.lastUpdated\n      return time\n    },\n    // 距离现在的时间\n    fromNow() {\n      const { fromNow } = this.$page.lastUpdated\n      return fromNow\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("可以看到是在计算属性里获取"),a("code",[s._v("this.$page.lastUpdated")]),s._v("，计算属性里是同步的，于是我打算试试用别的方案获取")]),s._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("p",[s._v("众所周知，Vue里有一个生命周期钩子"),a("code",[s._v("mounted")]),s._v("，作用是在组件开始渲染模板时调用，于是我试想如果在这个钩子里获取的话，会不会就解决了这个问题")]),s._v(" "),a("p",[s._v("我开始用自己的思路修改代码，具体代码如下：")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("// 首先在data里定义这两个用于渲染模板里的响应式数据\ndata() {\n  return {\n    lastUpdated: '',\n    fromNow: ''\n  },\n},\n// 生命周期钩子中获取并赋值\nmounted() {\n  const { time, fromNow } = this.$page.lastUpdated\n  this.lastUpdated = time\n  this.fromNow = fromNow\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("问题解决！ 成功截图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/myBlog/blogImages/buildSuccess.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);